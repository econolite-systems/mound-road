apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.moundRdUi.name }}
data:
  config.json: |
    {
      "authSettings": {
        "authority": "{{.Values.url.identity}}",
        "api":"{{.Values.url.identity}}",
        "automaticSilentRenew": true,
        "clientId": "{{.Values.identity.clientId}}",
        "clientScope": "openid email profile roles",
        "loadUserInfo": true,
        "login": "/login",
        "postLogoutRedirectUri": "{{ .Values.url.transportProtocol }}://{{ .Values.url.uiHost }}/logout-redirect.html",
        "redirectUri": "{{ .Values.url.transportProtocol }}://{{ .Values.url.uiHost }}/login-redirect.html",
        "responseType": "id_token token",
        "silentRedirectUri": "{{ .Values.url.transportProtocol }}://{{ .Values.url.uiHost }}/silent-redirect.html"
      },
      "jasperReportSettings": {
        "reportServerUrl": "{{ .Values.jasperReportSettings.reportServerUrl }}",
        "reportServerUsername": "{{ .Values.jasperReportSettings.reportServerUsername }}",
        "reportServerPassword": "{{ .Values.jasperReportSettings.reportServerPassword }}"
      },
      "applications": [
        {
          "name": "Mobility",
          "url": "{{ .Values.url.transportProtocol }}://{{ .Values.url.mobilityHost }}"
        },
        {
          "name": "Role Management",
          "url": "{{ .Values.url.transportProtocol }}://{{ .Values.url.rolesHost }}"
        },
        {
          "name": "CV ODE",
          "url": "{{ .Values.url.transportProtocol }}://{{ .Values.url.uiHost }}"
        }
      ],
      "serviceSettings": {
        "configService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.configurationPath }}",
        "reportsService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.reportsPath }}",
        "signalStatusService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.signalStatusPath }}",
        "speedStatusService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.speedStatusPath }}",
        "systemHealthService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.systemHealthPath }}",
        "timService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.timPath }}",
        "vehiclePriorityService": "{{ .Values.url.transportProtocol }}://{{ .Values.url.apiHost }}/{{ .Values.url.vehiclePriorityPath }}"
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.moundRdUi.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.moundRdUi.name }}
    helm.sh/chart: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.moundRdUi.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .Values.moundRdUi.name }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.moundRdUi.name }}
  labels:
    app: {{ .Values.moundRdUi.name }}
    chart: {{ .Release.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.moundRdUi.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ .Values.moundRdUi.name  }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.moundRdUi.name }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
      - name: {{ .Values.secrets.imagePullSecret }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Values.moundRdUi.name }}
      containers:
      - name: {{ .Values.moundRdUi.name }}
        image: "{{ .Values.moundRdUi.imageRepository }}:{{ .Values.moundRdUi.imageTag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: config-volume
          mountPath: /usr/share/nginx/html/config
        ports:
        - name: http
          containerPort: {{ .Values.moundRdUi.service.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
{{ toYaml .Values.moundRdUi.resources | indent 12 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.moundRdUi.name }}
  labels:
  annotations:
    ingress.kubernetes.io/browser-xss-filter: "true"
    ingress.kubernetes.io/content-type-nosniff: "true"
    ingress.kubernetes.io/referrer-policy: unsafe-url
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - secretName: {{ .Values.ingress.tlsSecret }}
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: {{ .Values.ingress.path | default "/"}}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Values.moundRdUi.name }}
                port:
                  name: http
      host: {{ .Values.url.uiHost }}
